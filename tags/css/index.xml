<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Front-end &amp; Webdesign</title>
    <link>http://ronanlevesque.fr/tags/css/</link>
    <description>Recent content in Css on Front-end &amp; Webdesign</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ronanlevesque.fr/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS « fonctionnel » et responsive design</title>
      <link>http://ronanlevesque.fr/articles/css-fonctionnel-et-responsive-design/</link>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/css-fonctionnel-et-responsive-design/</guid>
      <description>J&amp;rsquo;ai lu aujourd&amp;rsquo;hui un article très intéressant qui soulignait les bénéfices du CSS dit « fonctionnel » (on entend par fonctionnel l&amp;rsquo;utilisation généralisée de classes utilitaires à but unique). Le hic, c&amp;rsquo;est qu&amp;rsquo;il néglige également de parler d&amp;rsquo;un inconvénient majeur et de la manière de le traiter.
Un exemple pour commencer&amp;hellip; Avant de rentrer dans le vif du sujet il peut être utile de faire un rappel de ce qu&amp;rsquo;est le CSS fonctionnel, cf.</description>
    </item>
    
    <item>
      <title>Nommage et architecture CSS</title>
      <link>http://ronanlevesque.fr/articles/nommage-et-architecture-css/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/nommage-et-architecture-css/</guid>
      <description>A ma connaissance, il n&amp;rsquo;y a rien de plus casse-tête côté front que de trouver la bonne structure et le nommage correct pour assurer une maintenabilité et une lisibilité optimales de mes CSS. Certaines méthodologies, comme BEM ou SUIT, permettent cependant de faciliter ça. Je vais décrire ici la façon dont j&amp;rsquo;ai adapté ces techniques à mon workflow.
Les bases&amp;nbsp;: BEM et SUIT Si ces deux acronymes ne vous évoquent rien, je vous suggère avant toute chose de lire mon article sur le premier ainsi que la documentation Github du deuxième.</description>
    </item>
    
    <item>
      <title>Dans l&#39;enfer de @font-face</title>
      <link>http://ronanlevesque.fr/articles/dans-l-enfer-de-font-face/</link>
      <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/dans-l-enfer-de-font-face/</guid>
      <description>L&amp;rsquo;utilisation de fontes personnalisées a explosé ces dernières années sur le web grâce à la déclaration CSS @font-face, dont l&amp;rsquo;utilisation a été rendue simple par des sites tels que FontSquirrel et son désormais célèbre webfont generator. Pourtant, la méthode proposée ne me paraît pas idéale.
Si l&amp;rsquo;on reprend l&amp;rsquo;exemple de FontSquirrel, le code généré par le kit téléchargé est le suivant&amp;nbsp;:
@font-face { font-family: &#39;merriweather&#39;; src: url(&#39;merriweather.eot&#39;); src: url(&#39;merriweather.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;merriweather.</description>
    </item>
    
    <item>
      <title>CSS et notation BEM</title>
      <link>http://ronanlevesque.fr/articles/css-et-notation-bem/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/css-et-notation-bem/</guid>
      <description>Un des gros points noirs du CSS est la complexité que sa maintenance peut parfois engendrer. Cela s&amp;rsquo;avère surtout vrai pour de gros sites, pour lesquels éditer un simple style peut vite tourner au cauchemar, au risque de casser entièrement votre mise en page. C&amp;rsquo;est là que des concepts tels que BEM interviennent&amp;hellip;
Le principe BEM est une méthodologie mise au point par Yandex. &amp;ldquo;BEM&amp;rdquo; signifie Block, Element, Modifier. l&amp;rsquo;idée derrière cette méthodologie est de faciliter la lecture (et la ré-usabilité) du code par d&amp;rsquo;autres développeurs.</description>
    </item>
    
    <item>
      <title>I hate U flat !</title>
      <link>http://ronanlevesque.fr/articles/i-hate-u-flat/</link>
      <pubDate>Fri, 12 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/i-hate-u-flat/</guid>
      <description>I hate U flat ! est un petit projet - 7ko compressé - se présentant sous la forme d&amp;rsquo;une librairie de boutons en CSS, que j&amp;rsquo;ai créé récemment à force d&amp;rsquo;entendre parler de flat design à peu près partout sur le web depuis de longs mois.
Personnellement, je n&amp;rsquo;ai rien contre cette tendance, mon site suivant d&amp;rsquo;ailleurs un peu la mode du flat, mais je trouve dommage de se priver totalement des effets d&amp;rsquo;ombres et de dégradés alors qu&amp;rsquo;on a enfin de quoi obtenir de jolis effets depuis l&amp;rsquo;arrivée de CSS3.</description>
    </item>
    
    <item>
      <title>Font-size : quelles solutions ?</title>
      <link>http://ronanlevesque.fr/articles/font-size-quelles-solutions/</link>
      <pubDate>Thu, 20 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/font-size-quelles-solutions/</guid>
      <description>Le choix est large quand on s&amp;rsquo;intéresse à la propriété CSS font-size&amp;nbsp;: on peut tout aussi bien lui attribuer des valeurs prédéfinies (small, medium etc.) que des valeurs absolues (pt, cm, mm etc.) ou encore des valeurs relatives (px, em, %, etc.). Le but de mon article est de faire un point sur les unités em et rem et leurs usages.
Em et Rem&amp;nbsp;: un rappel Ces unités sont parfois un peu dures à appréhender car leur définition reste plutôt abstraite.</description>
    </item>
    
    <item>
      <title>FOX CSS est passé sous Sass</title>
      <link>http://ronanlevesque.fr/articles/fox-css-est-passe-sous-sass/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/fox-css-est-passe-sous-sass/</guid>
      <description>J&amp;rsquo;ai lancé depuis quelques mois mon petit &amp;ldquo;framework&amp;rdquo; CSS perso, FOX CSS, et après l&amp;rsquo;avoir utilisé pour la création de sites allant de sites d&amp;rsquo;une page à des projets bien plus complexes, je le trouve parfaitement viable par rapport à mes besoins. En parallèle, j&amp;rsquo;ai aussi passé tous mes projets sous Sass; la suite logique était donc de mixer FOX CSS et Sass.
Ce que je considère comme le point fort de ce framework, c&amp;rsquo;est sa modularité.</description>
    </item>
    
    <item>
      <title>Text-align: justify pour une nouvelle technique de grilles</title>
      <link>http://ronanlevesque.fr/articles/text-align-justify-pour-une-nouvelle-technique-de-grilles/</link>
      <pubDate>Mon, 03 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/text-align-justify-pour-une-nouvelle-technique-de-grilles/</guid>
      <description>Je suis tombé sur une nouvelle technique publiée par l&amp;rsquo;agence new-yorkaise Barrel pour créer des grilles qui évitent ENFIN les prises de têtes que sont les marges horizontales. Je la partage aujourd&amp;rsquo;hui en français et surtout je la conseille vivement comme méthode de remplacement des techniques traditionnelles.
Les techniques habituelles En fait quand je crée des grilles, par exemple de listings produits (le plus souvent responsive), j&amp;rsquo;utilise une des deux techniques suivantes&amp;nbsp;:</description>
    </item>
    
    <item>
      <title>Animations en CSS : un cas pratique</title>
      <link>http://ronanlevesque.fr/articles/animations-en-css-un-cas-pratique/</link>
      <pubDate>Tue, 07 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/animations-en-css-un-cas-pratique/</guid>
      <description>J&amp;rsquo;avais posté il y a quelques temps un bref tutoriel sur les animations en CSS. Depuis je n&amp;rsquo;avais pas vraiment creusé la question, mais en refaisant le site récemment j&amp;rsquo;ai décidé d&amp;rsquo;ajouter un peu de vie dans la bannière, en faisant bouger quelques-uns des éléments du paysage (nuage, fumée de l&amp;rsquo;usine, drapeau et montgolfière). L&amp;rsquo;idée ici est de montrer comment ça fonctionne, concrètement.
Attention, comme pour le tuto précédent, dans les exemples qui suivent je n&amp;rsquo;ai rien préfixé pour plus de simplicité.</description>
    </item>
    
    <item>
      <title>Les animations en CSS</title>
      <link>http://ronanlevesque.fr/articles/les-animations-en-css/</link>
      <pubDate>Fri, 21 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/les-animations-en-css/</guid>
      <description>Pendant longtemps, les animations d&amp;rsquo;un site ont été faites en flash ou via des gifs animés, mais tout cela est en passe d&amp;rsquo;être remplacé grâce à deux nouveaux modules introduits par CSS3, animation et transition. Dans cet article je me concentrerai sur le premier pour vous montrer comment, grâce à une syntaxe claire est simple, il est dorénavant facile de mettre un peu de mouvement sur vos pages&amp;hellip;
Le principe La déclaration de l&amp;rsquo;animation dans le CSS se fait en 2 étapes&amp;nbsp;:</description>
    </item>
    
    <item>
      <title>Le jour où j&#39;ai testé Sass</title>
      <link>http://ronanlevesque.fr/articles/le-jour-ou-jai-teste-sass/</link>
      <pubDate>Mon, 15 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/le-jour-ou-jai-teste-sass/</guid>
      <description>J&amp;rsquo;ai lu récemment pas mal de débats sur l&amp;rsquo;intérêt d&amp;rsquo;intégrer ou non les préprocesseurs CSS dans nos workflows. Certains pour, d&amp;rsquo;autres contre, bref, les avis semblaient vraiment partagés sur le sujet. D&amp;rsquo;après ce que j&amp;rsquo;avais pu en lire, ils pouvaient pourtant présenter un réel intérêt dans certains cas, notamment sur de gros projets. Curieux d&amp;rsquo;en savoir un peu plus sur le sujet, j&amp;rsquo;ai récemment plongé mon nez dans Sass, qui semblait le plus populaire des différents préprocesseurs.</description>
    </item>
    
    <item>
      <title>Un template complexe pour le responsive design</title>
      <link>http://ronanlevesque.fr/articles/un-template-complexe-pour-le-responsive-design/</link>
      <pubDate>Mon, 24 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/un-template-complexe-pour-le-responsive-design/</guid>
      <description>J&amp;rsquo;ai intégré un template pour approche &amp;ldquo;mobile first&amp;rdquo; dans FOX CSS, le framework que j&amp;rsquo;ai créé (cf. mon article précédent). Par exemple, un élément de type bloc s&amp;rsquo;étant vu attribuer la classe .r50 occupera 100% de la largeur de son parent jusqu&amp;rsquo;à 640px de largeur, puis il passera à 50% au-dessus. C&amp;rsquo;est un bon début, mais comment faire si on veut plus de possibilités sur des résolutions supérieures&amp;nbsp;?
Ainsi, avec cette classe .</description>
    </item>
    
    <item>
      <title>FOX CSS : un framework CSS light</title>
      <link>http://ronanlevesque.fr/articles/fox-css-un-framework-css-light/</link>
      <pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/fox-css-un-framework-css-light/</guid>
      <description>J&amp;rsquo;ai bossé ces dernières semaines sur la création d&amp;rsquo;un framework CSS adapté à mes besoins. L&amp;rsquo;idée m&amp;rsquo;est venue quand le framework KNACSS a été publié. Avant cela, j&amp;rsquo;utilisais un simple reset, celui d&amp;rsquo;Eric Meyer. Mais le fait de repartir à zéro, et de manière aussi extrême, n&amp;rsquo;était pas la solution la plus satisfaisante à mes yeux. A l&amp;rsquo;opposé, utiliser des frameworks complexes, comme Twitter Bootstrap, ne répondait pas non plus à mes besoins.</description>
    </item>
    
    <item>
      <title>Les atouts de box-sizing: border-box</title>
      <link>http://ronanlevesque.fr/articles/les-atouts-de-box-sizing-border-box/</link>
      <pubDate>Wed, 15 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/les-atouts-de-box-sizing-border-box/</guid>
      <description>Par défaut, la largeur totale d&amp;rsquo;une boîte sera égale à la largeur qui lui a été attribuée + son padding (box-sizing: content-box). Par exemple, si l&amp;rsquo;on veut avoir une boîte d&amp;rsquo;une largeur de 100px, avec un padding de 10px, il faudra spécifier dans le css une width:80px pour celle-ci (80px + 10 px + 10px). Pas vraiment pratique, surtout lorsqu&amp;rsquo;on veut utiliser des boîtes de taille fluide avec des paddings fixes&amp;hellip;</description>
    </item>
    
    <item>
      <title>A propos du responsive design</title>
      <link>http://ronanlevesque.fr/articles/a-propos-du-responsive-design/</link>
      <pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/a-propos-du-responsive-design/</guid>
      <description>Ce site a été construit sur le principe du responsive design. Cela signifie en fait qu&amp;rsquo;il est construit de manière à s&amp;rsquo;adapter automatiquement à la résolution des différents écrans. A partir du moment où vous êtes équipés d&amp;rsquo;un navigateur moderne (c&amp;rsquo;est à dire à peu près tous les navigateurs à part Internet Explorer 8 et versions inférieures), il s&amp;rsquo;ajustera de lui-même à votre écran.
Pour tester cela il vous suffit simplement de redimensionner la fenêtre de votre navigateur pour voir si les éléments se repositionnent automatiquement d&amp;rsquo;eux-même afin de respecter la largeur de la fenêtre.</description>
    </item>
    
    <item>
      <title>Mise en page et positionnement</title>
      <link>http://ronanlevesque.fr/articles/mise-en-page-et-positionnement/</link>
      <pubDate>Thu, 12 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/mise-en-page-et-positionnement/</guid>
      <description>Il existe plusieurs manières de positionner différents éléments au sein d&amp;rsquo;une page. Certaines, telles que l&amp;rsquo;utilisation des tableaux sont décriées, à tort ou à raison selon les points de vue, d&amp;rsquo;autres sont fortement plébiscitées et très souvent utilisées. Le but de cet article et de faire un point sur les différentes méthodes mises à notre disposition, et de finir par un cas pratique centré autour de la position: absolute.</description>
    </item>
    
    <item>
      <title>Créer un menu avec dropdown en CSS3</title>
      <link>http://ronanlevesque.fr/articles/creer-un-menu-avec-dropdown-en-css3/</link>
      <pubDate>Mon, 02 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/creer-un-menu-avec-dropdown-en-css3/</guid>
      <description>Les menus avec dropdown sont de nos jours fortement utilisés sur les sites possédant beaucoup de contenu. Ils s&amp;rsquo;appuient en général sur du JavaScript pour fonctionner. Pourtant il existe un moyen simple de créer des dropdown uniquement en CSS3 (malgré une très légère exception en fin d&amp;rsquo;article). Dans cet article nous allons voir comment mettre ce type de dropdown en place.
Voir la démo
Voici le tutoriel détaillé pour arriver à ce résultat.</description>
    </item>
    
    <item>
      <title>Styler les formulaires sur iPhone</title>
      <link>http://ronanlevesque.fr/articles/styler-les-formulaires-sur-iphone/</link>
      <pubDate>Sat, 30 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ronanlevesque.fr/articles/styler-les-formulaires-sur-iphone/</guid>
      <description>J&amp;rsquo;ai monté ce site dans l&amp;rsquo;optique d&amp;rsquo;en faire un site accessible aussi bien par les ordinateurs que les machines nomades (téléphones, tablettes)&amp;hellip; Pour plus d&amp;rsquo;infos sur le sujet vous pouvez consulter l&amp;rsquo;article sur le responsive design que j&amp;rsquo;ai publié sur ce blog. L&amp;rsquo;idée est que le contenu reste le même quel que soit le support, mais que la façon dont il s&amp;rsquo;affiche s&amp;rsquo;ajuste d&amp;rsquo;elle-même.
Etant possesseur d&amp;rsquo;un iPhone, j&amp;rsquo;ai beaucoup testé mon site sur celui-ci pendant son développement.</description>
    </item>
    
  </channel>
</rss>