<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://ronanlevesque.fr/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ronanlevesque.fr/" rel="alternate" type="text/html" /><updated>2017-08-11T10:25:04+02:00</updated><id>http://ronanlevesque.fr/</id><title type="html">Ronan Levesque - Frontend &amp;amp; Webdesign</title><subtitle>Site de Ronan Levesque : Front-end et Webdesign. Je cr√©e vos sites Internet et applications web. HTML5, CSS3, Responsive design, JavaScript, WordPress...</subtitle><entry><title type="html">CSS ‚Äúfonctionnel‚Äù et responsive design</title><link href="http://ronanlevesque.fr/articles/les-limites-du-css-fonctionnel/" rel="alternate" type="text/html" title="CSS &quot;fonctionnel&quot; et responsive design" /><published>2017-08-10T00:00:00+02:00</published><updated>2017-08-10T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/les-limites-du-css-fonctionnel</id><content type="html" xml:base="http://ronanlevesque.fr/articles/les-limites-du-css-fonctionnel/">&lt;p&gt;J‚Äôai lu aujourd‚Äôhui un &lt;a href=&quot;https://adamwathan.me/css-utility-classes-and-separation-of-concerns/&quot;&gt;article&lt;/a&gt; tr√®s int√©ressant qui soulignait les b√©n√©fices du CSS dit ‚Äúfonctionnel‚Äù (on entend par fonctionnel l‚Äôutilisation g√©n√©ralis√©e de classes utilitaires √† but unique). Le hic, c‚Äôest qu‚Äôil n√©glige √©galement de parler d‚Äôun inconv√©nient majeur et de la mani√®re de le traiter.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;un-exemple-pour-commencer&quot;&gt;Un exemple pour commencer‚Ä¶&lt;/h2&gt;

&lt;p&gt;Avant de rentrer dans le vif du sujet il peut √™tre utile de faire un rappel de ce qu‚Äôest le CSS fonctionnel, cf. cette d√©finition tir√©e de &lt;a href=&quot;https://css-tricks.com/lets-define-exactly-atomic-css/&quot;&gt;CSS-Tricks&lt;/a&gt; :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le CSS atomique (fonctionnel) est l‚Äôapproche, en architecture CSS, qui favorise les petites classes √† but unique avec des noms bas√©s sur leurs fonctions visuelles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Voici un exemple simple, mais &lt;strong&gt;volontairement verbeux&lt;/strong&gt; pour plus de clart√© :&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;GvmOzV&quot; data-default-tab=&quot;html,css&quot; data-user=&quot;eskiiss&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;GvmOzV&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/eskiiss/pen/GvmOzV/&quot;&gt;GvmOzV&lt;/a&gt; by Ronan Levesque (&lt;a href=&quot;https://codepen.io/eskiiss&quot;&gt;@eskiiss&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;L‚Äôavantage saute imm√©diatement aux yeux; cette mani√®re de faire permet de gagner en maintenabilit√© et en temps de d√©veloppement. Cependant l‚Äôarticle √©lude un sujet capital et auquel la plupart des frameworks CSS qui suivent cette m√©thode peinent √† offrir une solution pertinente : la &lt;strong&gt;transformabilit√©&lt;/strong&gt; des dites classes.&lt;/p&gt;

&lt;p&gt;J‚Äôentends par l√†, la capacit√© d‚Äôune classe √† faire √©voluer ses styles (via &lt;em&gt;media queries&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Reprenons l‚Äôexemple ci-dessus : nos classes utilitaires vont tr√®s bien marcher pour une taille d‚Äô√©cran standard, mais qu‚Äôen est-il si on souhaite ajuster le bloc pour des petits / grands √©crans ? Si on d√©cide de maintenir une valeur par classe, alors on se retrouve avec un code assez horrible :&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;BdRYyJ&quot; data-default-tab=&quot;html,css&quot; data-user=&quot;eskiiss&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;BdRYyJ&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/eskiiss/pen/BdRYyJ/&quot;&gt;BdRYyJ&lt;/a&gt; by Ronan Levesque (&lt;a href=&quot;https://codepen.io/eskiiss&quot;&gt;@eskiiss&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dans cet exemple, il n‚Äôy a que 3 &lt;em&gt;breakpoints&lt;/em&gt;. Mais on imagine ais√©ment l‚Äôusine √† gaz que cela va devenir si on doit en g√©rer 5, voire plus (cas fr√©quents lorsque l‚Äôon fait du responsive design).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Pour avoir exp√©riment√© le CSS fonctionnel dans le pass√©, je vois les avantages qu‚Äôon peut tirer de cette m√©thodologie. Mais je reste mitig√© car elle risque d‚Äôinduire un niveau de complexit√© suppl√©mentaire dans la gestion des classes. En inspectant le code de &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;, cr√©√© par &lt;a href=&quot;https://twitter.com/adamwathan&quot;&gt;Adam Wathan&lt;/a&gt; (auteur de l‚Äôarticle), je me trouve par exemple face √† ce genre de chose :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;h1 class=&quot;text-2xl sm:text-3xl text-thin text-dark-soft constrain-sm mx-auto leading-tight mb-8&quot;&amp;gt;A Utility-First CSS Framework for Rapid UI Development&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et j‚Äôai du mal √† voir en quoi √ßa serait plus maintenable ou lisible que :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;h1 class=&quot;main-title&quot;&amp;gt;A Utility-First CSS Framework for Rapid UI Development&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ou alors, il faut envisager une approche diff√©rente.&lt;/p&gt;

&lt;h2 id=&quot;utilitaires--media-queries&quot;&gt;Utilitaires + media queries&lt;/h2&gt;

&lt;p&gt;√Ä la lumi√®re de ces diff√©rents exemples, on comprendra sans peine pourquoi il est sans doute pr√©f√©rable de traiter d‚Äôune autre mani√®re les utilitaires contenant une valeur susceptible de changer selon les &lt;em&gt;breakpoints&lt;/em&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;font-size&lt;/code&gt; etc.)‚Ä¶&lt;/p&gt;

&lt;p&gt;Reprenons notre exemple de &lt;em&gt;random block&lt;/em&gt;. On sait que les valeurs de &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt; et de &lt;code class=&quot;highlighter-rouge&quot;&gt;font-size&lt;/code&gt; doivent √©voluer d‚Äôun &lt;em&gt;breakpoint&lt;/em&gt; √† un autre. Mais on veut garder cette notion de classe utilitaire, r√©utilisable ailleurs. On peut alors imaginer une approche identique √† ceci :&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;vJmdzp&quot; data-default-tab=&quot;html,css&quot; data-user=&quot;eskiiss&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;vJmdzp&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/eskiiss/pen/vJmdzp/&quot;&gt;vJmdzp&lt;/a&gt; by Ronan Levesque (&lt;a href=&quot;https://codepen.io/eskiiss&quot;&gt;@eskiiss&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rien ne nous emp√™che par la suite de cr√©er des classes telles que &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-small&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-large&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;text-small&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;text-large&lt;/code&gt; etc., qui seront toutes en charge de traiter leurs propres &lt;em&gt;breakpoints&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ainsi, on abstrait les notions de transformabilit√© au sein de la classe utilitaire, qui garde son c√¥t√© r√©utilisable. Cela permet √©galement de renforcer la consistance de nos styles.&lt;/p&gt;

&lt;h2 id=&quot;css-fonctionnel-et-composants&quot;&gt;CSS fonctionnel et composants&lt;/h2&gt;

&lt;p&gt;Adam pr√©cise dans son article qu‚Äôil n‚Äôest pas en faveur d‚Äôune approche 100% fonctionnelle car selon lui certains cas n√©cessitent d‚Äôutiliser des composants; il prend notamment un exemple tir√© de &lt;a href=&quot;http://tachyons.io/&quot;&gt;Tachyons&lt;/a&gt; utilis√© pour cr√©er un bouton et d√©montre qu‚Äôil serait plus simple d‚Äôen faire un composant r√©utilisable.&lt;/p&gt;

&lt;p&gt;En fait, toute la difficult√© de l‚Äôexercice revient √† savoir quand utiliser un utilitaire et quand utiliser un composant.&lt;/p&gt;

&lt;p&gt;D‚Äôailleurs, on pourrait m√™me arriver √† la conclusion qu‚Äôun utilitaire est en fait simplement un composant √† but unique. ü§î&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><category term="svg" /><summary type="html">J‚Äôai lu aujourd‚Äôhui un article tr√®s int√©ressant qui soulignait les b√©n√©fices du CSS dit ‚Äúfonctionnel‚Äù (on entend par fonctionnel l‚Äôutilisation g√©n√©ralis√©e de classes utilitaires √† but unique). Le hic, c‚Äôest qu‚Äôil n√©glige √©galement de parler d‚Äôun inconv√©nient majeur et de la mani√®re de le traiter.</summary></entry><entry><title type="html">Sprites SVG inline et filtres</title><link href="http://ronanlevesque.fr/articles/sprites-svg-inline-et-filtres/" rel="alternate" type="text/html" title="Sprites SVG inline et filtres" /><published>2016-05-19T00:00:00+02:00</published><updated>2016-05-19T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/sprites-svg-inline-et-filtres</id><content type="html" xml:base="http://ronanlevesque.fr/articles/sprites-svg-inline-et-filtres/">&lt;p&gt;Je me suis r√©cemment arrach√© quelques cheveux sur un bug qui me semblait assez incompr√©hensible lorsque j‚Äôessayais d‚Äôutiliser des sprites SVG inline (directement int√©gr√©s dans mes pages) et que ceux-ci utilisaient des filtres¬†: le sprite appel√© ne s‚Äôaffichait tout simplement pas. Ayant r√©ussi √† trouver d‚Äôo√π le probl√®me venait, je le partage donc; √ßa peut toujours aider.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;info&quot;&gt;Les exemples suivants font usage de &lt;code&gt;symbol&lt;/code&gt; et &lt;code&gt;use&lt;/code&gt; pour afficher les ic√¥nes. Si vous n'√™tes pas √† l'aise avec le sujet, je vous invite √† lire en amont cet &lt;a href=&quot;https://css-tricks.com/svg-symbol-good-choice-icons/&quot;&gt;article de CSS-Tricks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prenons un cas basique d‚Äôutilisation d‚Äôun sprite SVG¬†:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// J'appelle mon sprite et je le masque
&amp;lt;svg style=&quot;display:none;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&amp;gt;
  &amp;lt;symbol id=&quot;close&quot; viewBox=&quot;0 0 64 64&quot;&amp;gt;&amp;lt;path d=&quot;M32 1C16.537 1 4 13.537 4 29s12.537 28 28 28 28-12.537 28-28S47.463 1 32 1zm9.686 41.867l-9.667-9.57L22.41 43l-4.277-4.277 9.576-9.7-9.71-9.61 4.277-4.278 9.695 9.572L41.552 15l4.315 4.314-9.567 9.663 9.7 9.576-4.314 4.314z&quot; fill=&quot;#fff&quot; fill-rule=&quot;evenodd&quot;/&amp;gt;&amp;lt;/symbol&amp;gt;
&amp;lt;/svg&amp;gt;

// J'utilise le sprite &quot;close&quot;
&amp;lt;svg class=&quot;mainNav-icon&quot; aria-hidden=&quot;true&quot;&amp;gt;
  &amp;lt;use xlink:href=&quot;#close&quot;&amp;gt;&amp;lt;/use&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Le code ci-dessous permettra d‚Äôafficher le symbole &lt;code class=&quot;highlighter-rouge&quot;&gt;#close&lt;/code&gt; n‚Äôimporte o√π sur votre page via la balise &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;example&quot; style=&quot;padding:50px;&quot;&gt;
  &lt;svg style=&quot;position:absolute;visibility:hidden;left:-9999px;top:-9999px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
    &lt;symbol id=&quot;close&quot; viewBox=&quot;0 0 64 64&quot;&gt;&lt;path d=&quot;M32 1C16.537 1 4 13.537 4 29s12.537 28 28 28 28-12.537 28-28S47.463 1 32 1zm9.686 41.867l-9.667-9.57L22.41 43l-4.277-4.277 9.576-9.7-9.71-9.61 4.277-4.278 9.695 9.572L41.552 15l4.315 4.314-9.567 9.663 9.7 9.576-4.314 4.314z&quot; fill=&quot;#fff&quot; fill-rule=&quot;evenodd&quot; /&gt;&lt;/symbol&gt;
  &lt;/svg&gt;

  &lt;svg class=&quot;mainNav-icon&quot; aria-hidden=&quot;true&quot; style=&quot;margin:auto;display:block;width:70px;height:70px;&quot;&gt;
    &lt;use xlink:href=&quot;#close&quot;&gt;&lt;/use&gt;
  &lt;/svg&gt;
&lt;/div&gt;

&lt;p&gt;L√† o√π √ßa coince, avec le code donn√© ci-dessus, c‚Äôest lorsque vous souhaitez rajouter des filtres. En laissant le sprite SVG en &lt;code class=&quot;highlighter-rouge&quot;&gt;display: none;&lt;/code&gt;, vos ic√¥nes ne s‚Äôafficheront plus.&lt;/p&gt;

&lt;p&gt;Heureusement, la solution est assez simple¬†: il suffit de masquer le SVG un peu diff√©remment pour que les ic√¥nes s‚Äôaffichent √† nouveau. Voici un nouvel exemple qui inclut cette fois des filtres¬†:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// J'appelle mon sprite SVG et je le masque d'une mani√®re diff√©rente
&amp;lt;svg style=&quot;position:absolute;visibility:hidden;left:-9999px;top:-9999px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&amp;gt;
  &amp;lt;defs&amp;gt;
    &amp;lt;filter x=&quot;-50%&quot; y=&quot;-50%&quot; width=&quot;200%&quot; height=&quot;200%&quot; filterUnits=&quot;objectBoundingBox&quot; id=&quot;a&quot;&amp;gt;&amp;lt;feOffset dy=&quot;3&quot; in=&quot;SourceAlpha&quot; result=&quot;shadowOffsetOuter1&quot;/&amp;gt;&amp;lt;feGaussianBlur stdDeviation=&quot;2&quot; in=&quot;shadowOffsetOuter1&quot; result=&quot;shadowBlurOuter1&quot;/&amp;gt;&amp;lt;feColorMatrix values=&quot;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.28 0&quot; in=&quot;shadowBlurOuter1&quot; result=&quot;shadowMatrixOuter1&quot;/&amp;gt;&amp;lt;feMerge&amp;gt;&amp;lt;feMergeNode in=&quot;shadowMatrixOuter1&quot;/&amp;gt;&amp;lt;feMergeNode in=&quot;SourceGraphic&quot;/&amp;gt;&amp;lt;/feMerge&amp;gt;&amp;lt;/filter&amp;gt;
  &amp;lt;/defs&amp;gt;
  // J'applique un filtre
  &amp;lt;symbol id=&quot;close&quot; viewBox=&quot;0 0 64 64&quot;&amp;gt;&amp;lt;path d=&quot;M32 1C16.537 1 4 13.537 4 29s12.537 28 28 28 28-12.537 28-28S47.463 1 32 1zm9.686 41.867l-9.667-9.57L22.41 43l-4.277-4.277 9.576-9.7-9.71-9.61 4.277-4.278 9.695 9.572L41.552 15l4.315 4.314-9.567 9.663 9.7 9.576-4.314 4.314z&quot; fill=&quot;#fff&quot; fill-rule=&quot;evenodd&quot; filter=&quot;url(#a)&quot;/&amp;gt;&amp;lt;/symbol&amp;gt;
&amp;lt;/svg&amp;gt;

// J'utilise le sprite &quot;close&quot;
&amp;lt;svg class=&quot;mainNav-icon&quot; aria-hidden=&quot;true&quot;&amp;gt;
  &amp;lt;use xlink:href=&quot;#close&quot;&amp;gt;&amp;lt;/use&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et voil√† le r√©sultat¬†:&lt;/p&gt;

&lt;svg style=&quot;position:absolute;visibility:hidden;left:-9999px;top:-9999px;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
  &lt;defs&gt;
    &lt;filter x=&quot;-50%&quot; y=&quot;-50%&quot; width=&quot;200%&quot; height=&quot;200%&quot; filterUnits=&quot;objectBoundingBox&quot; id=&quot;a&quot;&gt;&lt;feOffset dy=&quot;3&quot; in=&quot;SourceAlpha&quot; result=&quot;shadowOffsetOuter1&quot; /&gt;&lt;feGaussianBlur stdDeviation=&quot;2&quot; in=&quot;shadowOffsetOuter1&quot; result=&quot;shadowBlurOuter1&quot; /&gt;&lt;feColorMatrix values=&quot;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.28 0&quot; in=&quot;shadowBlurOuter1&quot; result=&quot;shadowMatrixOuter1&quot; /&gt;&lt;feMerge&gt;&lt;feMergeNode in=&quot;shadowMatrixOuter1&quot; /&gt;&lt;feMergeNode in=&quot;SourceGraphic&quot; /&gt;&lt;/feMerge&gt;&lt;/filter&gt;
  &lt;/defs&gt;
  &lt;symbol id=&quot;close2&quot; viewBox=&quot;0 0 64 64&quot;&gt;&lt;path d=&quot;M32 1C16.537 1 4 13.537 4 29s12.537 28 28 28 28-12.537 28-28S47.463 1 32 1zm9.686 41.867l-9.667-9.57L22.41 43l-4.277-4.277 9.576-9.7-9.71-9.61 4.277-4.278 9.695 9.572L41.552 15l4.315 4.314-9.567 9.663 9.7 9.576-4.314 4.314z&quot; fill=&quot;#fff&quot; fill-rule=&quot;evenodd&quot; filter=&quot;url(#a)&quot; /&gt;&lt;/symbol&gt;
&lt;/svg&gt;

&lt;div class=&quot;example&quot; style=&quot;padding:50px;&quot;&gt;
  &lt;svg class=&quot;mainNav-icon&quot; aria-hidden=&quot;true&quot; style=&quot;margin:auto;display:block;width:70px;height:70px;&quot;&gt;
    &lt;use xlink:href=&quot;#close2&quot;&gt;&lt;/use&gt;
  &lt;/svg&gt;
&lt;/div&gt;

&lt;p&gt;Pour information, j‚Äôai pu observer ce bug sur des versions r√©centes de Chrome, Firefox et Op√©ra. Si jamais vous en savez plus sur le sujet, n‚Äôh√©sitez pas √† m‚Äôen parler sur &lt;a href=&quot;https://twitter.com/ronanlevesque&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="svg" /><summary type="html">Je me suis r√©cemment arrach√© quelques cheveux sur un bug qui me semblait assez incompr√©hensible lorsque j‚Äôessayais d‚Äôutiliser des sprites SVG inline (directement int√©gr√©s dans mes pages) et que ceux-ci utilisaient des filtres¬†: le sprite appel√© ne s‚Äôaffichait tout simplement pas. Ayant r√©ussi √† trouver d‚Äôo√π le probl√®me venait, je le partage donc; √ßa peut toujours aider.</summary></entry><entry><title type="html">Nommage et architecture CSS</title><link href="http://ronanlevesque.fr/articles/nommage-et-architecture-css/" rel="alternate" type="text/html" title="Nommage et architecture CSS" /><published>2015-08-19T00:00:00+02:00</published><updated>2015-08-19T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/nommage-et-architecture-css</id><content type="html" xml:base="http://ronanlevesque.fr/articles/nommage-et-architecture-css/">&lt;p&gt;A ma connaissance, il n‚Äôy a rien de plus casse-t√™te c√¥t√© front que de trouver la bonne structure et le nommage correct pour assurer une maintenabilit√© et une lisibilit√© optimales de mes CSS. Certaines m√©thodologies, comme &lt;abbr title=&quot;Block, Element, Modifier&quot;&gt;BEM&lt;/abbr&gt; ou &lt;abbr title=&quot;Structured class names and meaningful hyphens&quot;&gt;SUIT&lt;/abbr&gt;, permettent cependant de faciliter √ßa. Je vais d√©crire ici la fa√ßon dont j‚Äôai adapt√© ces techniques √† mon workflow.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;les-bases-bem-et-suit&quot;&gt;Les bases¬†: BEM et SUIT&lt;/h2&gt;

&lt;p&gt;Si ces deux acronymes ne vous √©voquent rien, je vous sugg√®re avant toute chose de lire mon &lt;a href=&quot;/articles/css-notation-bem/&quot;&gt;article&lt;/a&gt; sur le premier ainsi que la &lt;a href=&quot;https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md&quot;&gt;documentation Github&lt;/a&gt; du deuxi√®me.&lt;/p&gt;

&lt;p&gt;J‚Äôai pour ma part commenc√© par utiliser BEM de mani√®re traditionnelle avant d‚Äôy incorporer une part de SUIT, ce qui me donnait quelque chose de ce genre¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.blockName {}
.blockName-element {}
.blockName--modifier {}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Je pr√©f√®re cette syntaxe par rapport au BEM classique, o√π l‚Äôutilisation des &lt;kbd&gt;_&lt;/kbd&gt; ne facilite pas vraiment l‚Äô√©dition du nom des classes.&lt;/p&gt;

&lt;h2 id=&quot;pousser-plus-loin-le-concept-des-modifiers&quot;&gt;Pousser plus loin le concept des Modifiers&lt;/h2&gt;

&lt;p&gt;Le souci avec les &lt;em&gt;Modifiers&lt;/em&gt;, c‚Äôest qu‚Äôils cr√©ent des classes √† rallonge, par exemple¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;button class=&quot;button button--small button--green button--caps&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;J‚Äôai r√©cemment vu passer un article d‚Äô&lt;a href=&quot;http://www.envato.com/&quot;&gt;Envato&lt;/a&gt; dans lequel √©tait d√©crit le principe des &lt;em&gt;&lt;a href=&quot;http://webuild.envato.com/blog/chainable-bem-modifiers/&quot;&gt;Chainable Modifiers&lt;/a&gt;&lt;/em&gt;, principe qu‚Äôils ont mis en place pour Envato Market.&lt;/p&gt;

&lt;p&gt;En se basant sur cette convention, le code ci-dessus se transformerait en¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;button class=&quot;button -small -green -caps&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C‚Äôest quand m√™me plus agr√©able √† lire, non¬†?&lt;/p&gt;

&lt;p&gt;Et si vous utilisez Sass, le mettre en place et en assurer la maintenabilit√© devient un jeu d‚Äôenfant.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;scss&quot;&gt;.button {
  padding: 2rem;

  &amp;amp;.-small {
    font-size: 1rem;
  }

  &amp;amp;.-green {
    background-color: green;
  }

  &amp;amp;.-caps {
    text-transform: uppercase;
  }
}&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;autres-emprunts-√†-suit&quot;&gt;Autres emprunts √† SUIT&lt;/h2&gt;

&lt;p&gt;J‚Äôutilise √©galement deux autres conventions provenant de SUIT¬†: les classes utilitaires et les classes d‚Äô√©tat.&lt;/p&gt;

&lt;h3 id=&quot;classes-utilitaires&quot;&gt;Classes utilitaires&lt;/h3&gt;

&lt;p&gt;Ce sont des classes g√©n√©riques, identifiables par un pr√©fixe &lt;code class=&quot;highlighter-rouge&quot;&gt;u-&lt;/code&gt;¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.u-white {}
.u-floatLeft {}
...&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;classes-d√©tat&quot;&gt;Classes d‚Äô√©tat&lt;/h3&gt;

&lt;p&gt;Celles-ci permettent d‚Äôidentifier le changement d‚Äô√©tat d‚Äôun composant; elles sont pr√©fix√©es par &lt;code class=&quot;highlighter-rouge&quot;&gt;is-&lt;/code&gt;¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;button class=&quot;button is-disabled&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;s√©lecteurs-javascript&quot;&gt;S√©lecteurs JavaScript&lt;/h2&gt;

&lt;p&gt;Pour tous les s√©lecteurs que je vais cibler en JS, j‚Äôajoute une classe (ou une id) pr√©fix√©e par &lt;code class=&quot;highlighter-rouge&quot;&gt;js-&lt;/code&gt;. Cette classe ne doit jamais appara√Ætre dans mes CSS afin de maintenir une s√©paration claire des r√¥les.&lt;/p&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What‚Äôs next¬†?&lt;/h2&gt;

&lt;p&gt;M√™me si la mise en place de cette m√©thodologie m‚Äôa procur√© un gain √©norme en termes de maintenabilit√© et de lisibilit√© sur des grosses bases de code CSS, elle n‚Äôest pas infaillible, et les risques de non-isolation et de sp√©cificit√© du code existent toujours.&lt;/p&gt;

&lt;p&gt;Pour contourner ‚Äì entre autres ‚Äì ces probl√®mes, &lt;a href=&quot;http://glenmaddern.com/articles/css-modules&quot;&gt;Glenn Maddern&lt;/a&gt; a cr√©√© un syst√®me de &lt;a href=&quot;http://glenmaddern.com/articles/css-modules&quot;&gt;modules CSS&lt;/a&gt;. Gr√¢ce √† du JS, les styles sont maintenus √† leur cr√©ation dans un &lt;em&gt;scope&lt;/em&gt; local qui permet de r√©soudre les questions de nommage et d‚Äôh√©ritage. Malheureusement, cette solution rajoute un niveau de complexit√© suppl√©mentaire qui risque d‚Äôen rebuter certains.&lt;/p&gt;

&lt;p&gt;Reste a esp√©rer qu‚Äôun standard verra enfin le jour pour corriger ce casse-t√™te‚Ä¶&lt;/p&gt;</content><author><name></name></author><category term="css" /><summary type="html">A ma connaissance, il n‚Äôy a rien de plus casse-t√™te c√¥t√© front que de trouver la bonne structure et le nommage correct pour assurer une maintenabilit√© et une lisibilit√© optimales de mes CSS. Certaines m√©thodologies, comme BEM ou SUIT, permettent cependant de faciliter √ßa. Je vais d√©crire ici la fa√ßon dont j‚Äôai adapt√© ces techniques √† mon workflow.</summary></entry><entry><title type="html">Une gestion responsable des webfonts</title><link href="http://ronanlevesque.fr/articles/une-gestion-responsable-des-webfonts/" rel="alternate" type="text/html" title="Une gestion responsable des webfonts" /><published>2015-06-25T00:00:00+02:00</published><updated>2015-06-25T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/une-gestion-responsable-des-webfonts</id><content type="html" xml:base="http://ronanlevesque.fr/articles/une-gestion-responsable-des-webfonts/">&lt;p&gt;Jusqu‚Äô√† tr√®s r√©cemment, j‚Äôavais tendance √† g√©rer mes webfonts de mani√®re basique en les appelant directement dans mon CSS, que ce soit via CDN (Google webfonts) ou en h√©bergement personnel. Mais cette mani√®re de faire est propice √† l‚Äôapparition du FOIT, qui peut √™tre tr√®s p√©nalisant selon les navigateurs. Voici une solution que j‚Äôai mise en place derni√®rement, et dont je suis pleinement satisfait.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;quelques-pr√©cisions&quot;&gt;Quelques pr√©cisions&lt;/h2&gt;

&lt;p&gt;La notion de &lt;em&gt;FOIT&lt;/em&gt; ne parlant pas √† tout le monde, commen√ßons par une petite explication¬†: tant que votre navigateur n‚Äôa pas t√©l√©charg√© les &lt;em&gt;webfonts&lt;/em&gt; de votre site, le texte ainsi styl√© reste invisible pendant un certain temps avant que le navigateur d√©cide d‚Äôafficher les polices que vous avez d√©finies par d√©faut. C‚Äôest ce qu‚Äôon appelle le &lt;em&gt;FOIT&lt;/em&gt;, pour &lt;em&gt;Flash Of Invisible Text&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Le probl√®me, c‚Äôest que ce temps varie selon les navigateurs; et s‚Äôil reste raisonnable sur Chrome ou Firefox (de l‚Äôordre de 3 secondes), il peut aller jusqu‚Äô√† 30 secondes pour Safari iOS par exemple.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/img/webfonts-invision.jpg&quot; alt=&quot;Exemple de site avec FOIT&quot; /&gt;
  &lt;figcaption&gt;Exemple de FOIT&amp;nbsp;: sur ce site, il m'a fallu une dizaine de secondes pour pouvoir acc√©der au contenu - malgr√© ma connexion en WiFi.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Si l‚Äôon consid√®re en outre qu‚Äôun site doit en moyenne se charger en 1 seconde avec une connexion rapide, ne pas pouvoir acc√©der au contenu du site avant 3 secondes n‚Äôest de toute fa√ßon pas l‚Äôid√©al.&lt;/p&gt;

&lt;h2 id=&quot;la-solution-au-probl√®me&quot;&gt;La solution au probl√®me&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://crocodillon.com/blog/non-blocking-web-fonts-using-localstorage&quot;&gt;Plusieurs&lt;/a&gt; &lt;a href=&quot;http://jaicab.com/localFont/&quot;&gt;techniques&lt;/a&gt; ont √©merg√© r√©cemment, mais celle qui a retenu mon attention est celle mise en place par &lt;a href=&quot;https://www.filamentgroup.com/lab/font-events.html&quot;&gt;filament group&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;L‚Äôid√©e est d‚Äôutiliser par d√©faut les polices &lt;em&gt;websafe&lt;/em&gt; (cf. &lt;a href=&quot;http://www.cssfontstack.com/&quot;&gt;CSS Font Stack&lt;/a&gt;) et de pr√©voir une classe contenant les &lt;em&gt;webfonts&lt;/em&gt;, par exemple¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  font-family: Sans-serif;
}

.font-loaded {
  font-family: 'Open Sans', Sans-serif;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On utilise ensuite le loader JS &lt;a href=&quot;https://github.com/bramstein/fontfaceobserver&quot;&gt;Font Face Observer&lt;/a&gt; cr√©√© par &lt;a href=&quot;https://twitter.com/bram_stein&quot;&gt;Bram Stein&lt;/a&gt; pour d√©tecter le moment o√π toutes les &lt;em&gt;webfonts&lt;/em&gt; seront load√©es, et une fois que c‚Äôest fait on ajoute notre classe &lt;code class=&quot;highlighter-rouge&quot;&gt;font-loaded&lt;/code&gt;¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;(function(w) {
  if (w.document.documentElement.className.indexOf('fonts-loaded') &amp;gt; -1) {
  	return;
  }
  var fontA = new w.FontFaceObserver('Open Sans', {
  	weight: 300
  });
  var fontB = new w.FontFaceObserver('Open Sans', {
  	weight: 300,
  	style: 'italic'
  });
  w.Promise
  .all([fontA.check(), fontB.check()])
  .then(function() {
  	w.document.documentElement.className += ' fonts-loaded';
    localStorage.setItem('fontsLoaded', true);
  });
}(this));&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;L‚Äôapproche de filament group privil√©gie l‚Äôutilisation de cookies, mais quant √† moi j‚Äôai pr√©f√©r√© me rabattre sur &lt;em&gt;localStorage&lt;/em&gt;. On cr√©e avec celui-ci un item &lt;code class=&quot;highlighter-rouge&quot;&gt;fontsLoaded&lt;/code&gt; gr√¢ce auquel on pourra ajouter dans notre &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;fonts-loaded&lt;/code&gt; √† notre html, comme ceci¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;script&amp;gt;
  if (localStorage.getItem('fontsLoaded')) {
    document.documentElement.className += ' fonts-loaded';
  }
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ainsi, tant que cet item sera encore pr√©sent dans notre &lt;em&gt;localStorage&lt;/em&gt;, la classe en question sera appliqu√©e avant le rendu de la page.&lt;/p&gt;

&lt;h2 id=&quot;une-future-alternative&quot;&gt;Une future alternative&lt;/h2&gt;

&lt;p&gt;L‚Äôapproche d√©crite ici me para√Æt pour l‚Äôinstant la plus efficace, en attendant une meilleure solution‚Ä¶ Celle-ci pourrait bien venir de la proposition &lt;em&gt;CSS font-rendering&lt;/em&gt; dont le but est de contr√¥ler directement via CSS le comportement d‚Äôaffichage de nos &lt;em&gt;webfonts&lt;/em&gt;. Je vous invite √† consulter son &lt;a href=&quot;https://github.com/KenjiBaheux/css-font-rendering&quot;&gt;repo Github&lt;/a&gt; pour de plus amples informations.&lt;/p&gt;</content><author><name></name></author><category term="tutoriels" /><category term="javascript" /><category term="html" /><summary type="html">Jusqu‚Äô√† tr√®s r√©cemment, j‚Äôavais tendance √† g√©rer mes webfonts de mani√®re basique en les appelant directement dans mon CSS, que ce soit via CDN (Google webfonts) ou en h√©bergement personnel. Mais cette mani√®re de faire est propice √† l‚Äôapparition du FOIT, qui peut √™tre tr√®s p√©nalisant selon les navigateurs. Voici une solution que j‚Äôai mise en place derni√®rement, et dont je suis pleinement satisfait.</summary></entry><entry><title type="html">Les principales nouveaut√©s de ES6</title><link href="http://ronanlevesque.fr/articles/les-principales-nouveautes-de-es6/" rel="alternate" type="text/html" title="Les principales nouveaut√©s de ES6" /><published>2015-04-27T00:00:00+02:00</published><updated>2015-04-27T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/les-principales-nouveautes-de-es6</id><content type="html" xml:base="http://ronanlevesque.fr/articles/les-principales-nouveautes-de-es6/">&lt;p&gt;JavaScript s‚Äôappr√™te √† vivre une petite r√©volution avec l‚Äôarriv√©e d‚ÄôES6, la prochaine version du standard ECMAScript. Et pour cause¬†: c‚Äôest une grosse mise √† jour du langage (la derni√®re datant de 2009 avec ES5). ES6 est √† ce jour en &lt;a href=&quot;http://kangax.github.io/compat-table/es6/&quot;&gt;cours d‚Äôimpl√©mentation&lt;/a&gt; dans les diff√©rents moteurs JS.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Si vous √™tes comme moi du genre impatient, il existe de nombreux &lt;em&gt;transpilers&lt;/em&gt; qui permettent √† l‚Äôheure actuelle d‚Äô√©crire de l‚ÄôES6 qui sera compil√© en ES5‚Ä¶ Une tr√®s bonne raison, √† mes yeux, de tester cette nouvelle syntaxe d√®s aujourd‚Äôhui. Voici ci-dessous quelques-unes de ses principales nouveaut√©s.&lt;/p&gt;

&lt;h2 id=&quot;table-des-mati√®res&quot;&gt;Table des mati√®res&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#arrows&quot;&gt;Arrows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#let-et-const&quot;&gt;Let et const&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#templates&quot;&gt;Templates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#objets-litteraux&quot;&gt;Objets litt√©raux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#parametres-par-defaut&quot;&gt;Param√®tres par d√©faut&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#parametres-rest&quot;&gt;Param√®tres rest&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#destructuration&quot;&gt;D√©structuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#for-of&quot;&gt;For‚Ä¶of&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#generateurs&quot;&gt;G√©n√©rateurs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#autres&quot;&gt;Autres&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;arrows&quot;&gt;Arrows&lt;/h2&gt;

&lt;p&gt;Une nouvelle mani√®re, plus simple et plus rapide, d‚Äô√©crire les fonctions¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;// ES5
link.addEventlistener('click', function(e) {
  e.preventDefault();
})

// ES6
link.addEventListener('click', e =&amp;gt; { e.preventDefault(); });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Attention¬†: contrairement aux fonctions traditionnelles la valeur de &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; est li√©e de fa√ßon lexicale (permet par exemple d‚Äô√©viter les &lt;code class=&quot;highlighter-rouge&quot;&gt;var self = this;&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;let-et-const&quot;&gt;Let et const&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Let&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;/code&gt; sont les nouveaux &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;, √† la diff√©rence qu‚Äôils restent scop√©s au bloc le plus proche.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function whatever() {
  if (true) {
    let a = 2;
  }
  console.log(a); // Erreur, a n'est pas d√©fini
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Const&lt;/code&gt; est immuable. Il n‚Äôest accessible qu‚Äôen lecture seule.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;const a = 1;
a++; // Erreur
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;templates&quot;&gt;Templates&lt;/h2&gt;

&lt;p&gt;Les templates fournissent une mani√®re plus simple de construire les strings (avec le caract√®re &lt;kbd&gt;`&lt;/kbd&gt;) en permettant de l‚Äôinterpolation.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;let fruit = {name: 'banana', color: 'yellow'};
let describe = `This ${fruit.name} is ${fruit.color}`;
console.log(describe); // Log 'This banana is yellow'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Par ailleurs, &lt;kbd&gt;`&lt;/kbd&gt; permet d‚Äô√©crire des strings multilignes.&lt;/p&gt;

&lt;h2 id=&quot;objets-litteraux&quot;&gt;Objets litt√©raux&lt;/h2&gt;

&lt;p&gt;Ceux-ci b√©n√©ficient de quelques nouveaut√©s¬†: d√©finition du prototype √† la construction, raccourcis pour les assignements de type &lt;code class=&quot;highlighter-rouge&quot;&gt;prop: prop&lt;/code&gt;, noms de propri√©t√©s dynamiques, possibilit√© de d√©finir des m√©thodes directement‚Ä¶&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;var myObj = {
  // D√©finition du protoype
  __proto__: protoObj,
  // Equivalent √† prop: prop
  prop,
  // Nom de propri√©t√© dynamique
  &amp;#91;'foo' + 'bar'&amp;#93;: 1,
  // M√©thode
  myMethod() {}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;classes&quot;&gt;Classes&lt;/h2&gt;

&lt;p&gt;ES6 fournit une mani√®re de g√©rer des classes via &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;extend&lt;/code&gt;. Cette nouvelle syntaxe est du sucre syntaxique (sic) par-dessus les prototypes. En voici un petit exemple¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;class Car {
  constructor(speed) {
    this.speed = `${speed}km/h`;
    this.color = 'gray';
  }
  describe() {
    console.log(`This car is ${this.color}`);
  }
}

class Ferrari extends Car {
  constructor(maxSpeed) {
    super(maxSpeed);
    this.color = 'red';
  }
  get newStats() {
    return `Max speed&amp;nbsp;: ${this.speed}`;
  }
}

let f430 = new Ferrari(250);
f430.describe(); // Log 'This car is red'
console.log(f430.newStats); // Log 'Max speed: 250km/h'&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;parametres-par-defaut&quot;&gt;Param√®tres par d√©faut&lt;/h2&gt;

&lt;p&gt;On peut dor√©navant sp√©cifier des param√®tres par d√©faut dans nos fonctions¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function car(color='red') {
  console.log(`This car is ${color}.`);
}

car(); // Log 'This car is red.'&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;parametres-rest&quot;&gt;Param√®tres rest&lt;/h2&gt;

&lt;p&gt;Ils permettent de repr√©senter un nombre illimit√© de param√®tres, sous forme d‚Äôarray.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function fn(...args) {
  console.log(args.length);
}

fn(); // Log 0
fn(1, 2, 3, 4, 5); // Log 5
fn(...&amp;#91;1, 2, 3, 4, 5&amp;#93;); // Log 5 √©galement&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;destructuration&quot;&gt;D√©structuration&lt;/h2&gt;

&lt;p&gt;Celle-ci permet de lier des donn√©es (arrays et objets sont support√©s). Si la valeur n‚Äôest pas trouv√©e, &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; sera retourn√©.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;let [foo, baz, bar] = [1, , 3];
console.log(foo); // Log 1
console.log(baz); // Log undefined
console.log(bar); // Log 3&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;for-of&quot;&gt;For...of&lt;/h2&gt;

&lt;p&gt;Cette d√©claration cr√©e une boucle sur des objets pouvant √™tre it√©r√©s (array, map, param√®tres etc.). La syntaxe est simple¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;let arr = ['red', 'yellow', 'blue'];
for (let n of arr) {
  console.log(n); // Log chaque valeur de l'array successivement
}&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;generateurs&quot;&gt;G√©n√©rateurs&lt;/h2&gt;

&lt;p&gt;Leur syntaxe est particuli√®re¬†: On d√©clare une nouvelle instance g√©n√©rateur avec la syntaxe &lt;code class=&quot;highlighter-rouge&quot;&gt;function*&lt;/code&gt;. A l‚Äôint√©rieur de celle-ci, &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; d√©finit la valeur retourn√©e. On peut appeler chaque valeur qui suit avec &lt;code class=&quot;highlighter-rouge&quot;&gt;next()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function* fn() {
  yield 'blue';
  yield 'red';
  yield 'green';
}

var a = fn();
console.log(a.next()); // Log 'blue'
console.log(a.next()); // Log 'red'
console.log(a.next()); // Log 'green'&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;modules&quot;&gt;Modules&lt;/h2&gt;

&lt;p&gt;Ils permettent de d√©mocratiser les solutions mises en place avec CommonJS ou AMD. Ces nouveaux modules fonctionnent sur un mod√®le asynchrone¬†: le code n‚Äôest pas ex√©cut√© tant que les modules requis n‚Äôont pas √©t√© ex√©cut√©s.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;// Dans un fichier 'utils.js'&amp;nbsp;:
export function addOne(x) {
  return x + 1;
};

// Dans un autre fichier&amp;nbsp;:
import addOne from 'utils';
addOne(4);

// Importation de tout le fichier&amp;nbsp;:
import * as utils from 'utils';
utils.addOne(4);&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;autres&quot;&gt;Autres&lt;/h2&gt;

&lt;p&gt;J‚Äôai couvert ici les nouveaut√©s qui paraissaient importantes √† mes yeux, mais il en existe d‚Äôautres¬†: promises, symboles, WeakMaps et WeakSets‚Ä¶ Pour une liste exhaustive de tous les ajouts, je vous invite √† consulter &lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;es6-features&lt;/a&gt; sur Github.&lt;/p&gt;</content><author><name></name></author><category term="javascript" /><summary type="html">JavaScript s‚Äôappr√™te √† vivre une petite r√©volution avec l‚Äôarriv√©e d‚ÄôES6, la prochaine version du standard ECMAScript. Et pour cause¬†: c‚Äôest une grosse mise √† jour du langage (la derni√®re datant de 2009 avec ES5). ES6 est √† ce jour en cours d‚Äôimpl√©mentation dans les diff√©rents moteurs JS.</summary></entry><entry><title type="html">Dropbox et node_modules</title><link href="http://ronanlevesque.fr/articles/dropdox-et-node-modules/" rel="alternate" type="text/html" title="Dropbox et node_modules" /><published>2015-04-02T00:00:00+02:00</published><updated>2015-04-02T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/dropdox-et-node-modules</id><content type="html" xml:base="http://ronanlevesque.fr/articles/dropdox-et-node-modules/">&lt;p&gt;J‚Äôutilise tr√®s souvent Dropbox pour garder mes diff√©rents projets synchronis√©s quelle que soit la machine que j‚Äôutilise. J‚Äôai cependant rencontr√© il y a quelques temps un souci en voulant utiliser Gulp et son volumineux &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;¬†: ce dernier a tendance √† se compter en milliers de fichiers, ce qui n‚Äôest pas id√©al pour la synchronisation de Dropbox.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Heureusement il est possible d‚Äôignorer ces fichiers; je vais vous montrer dans cet article comment faire.&lt;/p&gt;

&lt;p&gt;Mettons que ayez un projet Gulp avec son &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Une simple commande &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; permettra d‚Äôinstaller tous les modules contenus dans &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Mais avant cela, rendez-vous dans le dossier du projet, l√† o√π se situe le fichier en question, et cr√©ez-y un dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; vide.&lt;/p&gt;

&lt;p&gt;Ensuite, dans les pr√©f√©rences de Dropdox, direction &lt;code class=&quot;highlighter-rouge&quot;&gt;Compte &amp;gt; Synchronisation s√©lective&lt;/code&gt; et d√©cochez le dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;¬†:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/screen-dropbox-1.png&quot; alt=&quot;Pr√©f√©rences Dropbox&quot; style=&quot;border: none;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Celui-ci va √™tre supprim√© du dossier dans lequel il se trouvait. Il ne vous reste plus qu‚Äô√† lancer votre &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;; lorsque ceci est fait, le dossier node_modules appara√Ætra comme ignor√© par Dropbox¬†:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/screen-node-modules.png&quot; alt=&quot;Dossier node_modules&quot; style=&quot;border: none;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La d√©marche peut sembler un brin fastidieuse, mais c‚Äôest √† ma connaissance la seule solution pour √©viter d‚Äôavoir √† synchroniser √† chaque fois vos &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;.&lt;/p&gt;</content><author><name></name></author><category term="outils" /><summary type="html">J‚Äôutilise tr√®s souvent Dropbox pour garder mes diff√©rents projets synchronis√©s quelle que soit la machine que j‚Äôutilise. J‚Äôai cependant rencontr√© il y a quelques temps un souci en voulant utiliser Gulp et son volumineux node_modules¬†: ce dernier a tendance √† se compter en milliers de fichiers, ce qui n‚Äôest pas id√©al pour la synchronisation de Dropbox.</summary></entry><entry><title type="html">Mettre ses assets en cache avec Jekyll</title><link href="http://ronanlevesque.fr/articles/mettre-ses-assets-en-cache-avec-jekyll/" rel="alternate" type="text/html" title="Mettre ses assets en cache avec Jekyll" /><published>2014-12-17T00:00:00+01:00</published><updated>2014-12-17T00:00:00+01:00</updated><id>http://ronanlevesque.fr/articles/mettre-ses-assets-en-cache-avec-jekyll</id><content type="html" xml:base="http://ronanlevesque.fr/articles/mettre-ses-assets-en-cache-avec-jekyll/">&lt;p&gt;Je partage aujourd‚Äôhui une solution assez simple que l‚Äôon peut mettre en place avec Jekyll pour g√©n√©rer une unique ID utilisable sur nos assets pour contourner les √©ventuels probl√®mes de cache, et ainsi faire en sorte que les diff√©rents assets que l‚Äôon utilise soient correctement mis √† jour.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;info&quot;&gt;Mise √† jour (01/07/2015) : depuis l'√©criture de cette article, j'ai mis en place un syst√®me bien plus pertinent que je d√©taille ci-dessous.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lancienne-solution&quot;&gt;L‚Äôancienne solution&lt;/h2&gt;

&lt;p&gt;Celle-ci se base sur les formats date du syst√®me de templating &lt;a href=&quot;http://liquidmarkup.org/&quot;&gt;liquid&lt;/a&gt; pour g√©n√©rer une ID. Ainsi, au lieu de :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/myawesomestylesheet.css&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il nous suffira d‚Äôutiliser :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/myawesomestylesheet.css?v=&amp;#123;&amp;#123; site.time | date: '%y%m%d%k%M%S' &amp;#125;&amp;#125;&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ce qui g√©n√©rera, dans l‚Äôordre : l‚Äôann√©e, le mois, le jour, et l‚Äôheure avec minutes et secondes. Ainsi le r√©sultat obtenu sera de ce type :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/myawesomestylesheet.css?v=141217192112&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De cette mani√®re, on est s√ªr d‚Äôavoir une ID &lt;em&gt;presque&lt;/em&gt; unique puisqu‚Äô√† chaque seconde pass√©e elle sera diff√©rente.&lt;/p&gt;

&lt;h2 id=&quot;les-limites-de-cette-solution&quot;&gt;Les limites de cette solution&lt;/h2&gt;

&lt;p&gt;En appliquant cette fa√ßon de faire, tous les fichiers HTML seront mis √† jour avec une nouvelle version du CSS, m√™me si celui-ci n‚Äôa pas chang√©. La mise en cache perd un peu de son int√©r√™t‚Ä¶ Autre argument, Google &lt;a href=&quot;https://developers.google.com/speed/docs/insights/LeverageBrowserCaching&quot;&gt;conseille&lt;/a&gt; d‚Äô√©viter les &lt;em&gt;query parameters&lt;/em&gt; au profit des &lt;em&gt;fingerprints&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;un-autre-syst√®me&quot;&gt;Un autre syst√®me&lt;/h2&gt;

&lt;p&gt;Je suis all√© chercher du c√¥t√© des plugins Jekyll et j‚Äôai d√©nich√© &lt;a href=&quot;https://github.com/tkareine/jekyll-minibundle&quot;&gt;Jekyll-minibundle&lt;/a&gt;, qui fait exactement ce que je cherche. Une fois le plugin install√©, les &lt;em&gt;fingerprints&lt;/em&gt; s‚Äôajoutent de cette mani√®re :&lt;/p&gt;

&lt;pre class=&quot;html&quot;&gt;&lt;code&gt;&amp;lt;link href=&quot;&amp;#123;&amp;#37; ministamp /_assets/css/fox.css /assets/css/fox.css &amp;#37;&amp;#125;&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le premier lien est le fichier source, le deuxi√®me est le fichier de destination. Le code g√©n√©r√© donne √ßa :&lt;/p&gt;

&lt;pre class=&quot;html&quot;&gt;&lt;code&gt;&amp;lt;link href=&quot;/assets/css/fox-86e4c5e39ca8a41719996d783a87c702.css&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><category term="divers" /><category term="outils" /><summary type="html">Je partage aujourd‚Äôhui une solution assez simple que l‚Äôon peut mettre en place avec Jekyll pour g√©n√©rer une unique ID utilisable sur nos assets pour contourner les √©ventuels probl√®mes de cache, et ainsi faire en sorte que les diff√©rents assets que l‚Äôon utilise soient correctement mis √† jour.</summary></entry><entry><title type="html">Animer ses SVG avec Snap.svg</title><link href="http://ronanlevesque.fr/articles/animer-ses-svg-avec-snap-svg/" rel="alternate" type="text/html" title="Animer ses SVG avec Snap.svg" /><published>2014-07-21T00:00:00+02:00</published><updated>2014-07-21T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/animer-ses-svg-avec-snap-svg</id><content type="html" xml:base="http://ronanlevesque.fr/articles/animer-ses-svg-avec-snap-svg/">&lt;p&gt;Ces derniers temps, j‚Äôai un peu exp√©riment√© l‚Äôanimation de SVG. Mon premier essai a √©t√© cet &lt;a href=&quot;http://codepen.io/eskiiss/full/kFphn&quot;&gt;oiseau&lt;/a&gt;, dont les diff√©rents √©l√©ments sont anim√©s avec des keyframes. Mais √ßa reste limit√© en termes de possibilit√©s¬†: si je veux pouvoir modifier le trac√© m√™me de mon SVG de mani√®re fluide, la meilleure solution que j‚Äôai trouv√©e est &lt;a href=&quot;http://snapsvg.io/&quot;&gt;Snap.svg&lt;/a&gt;. Je vais vous expliquer le processus en d√©tails.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;info&quot;&gt;Attention, pour bien saisir ce tutoriel il est pr√©f√©rable d'√™tre √† l'aise sur le mode de fonctionnement des SVG.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lid√©e-de-d√©part&quot;&gt;L‚Äôid√©e de d√©part&lt;/h2&gt;

&lt;p&gt;Je suis parti sur une id√©e relativement simple¬†: je cr√©e des smileys sous Sketch, chacun avec deux √©tats diff√©rents, et je fais en sorte de les faire changer d‚Äô√©tat au clic.&lt;/p&gt;

&lt;style&gt;
  svg {
    width: 64px;
    height: 64px;
    display: inline-block;
  }

  svg:hover {
    cursor: pointer;
  }

  @media screen and (min-width:50em) {
    svg {
      width: 110px;
      height: 110px;
    }
  }

  @media screen and (min-width:81.25em) {
    svg {
      width: 150px;
      height: 150px;
    }
  }
&lt;/style&gt;

&lt;figure&gt;
  &lt;svg width=&quot;390px&quot; height=&quot;390px&quot; viewBox=&quot;0 0 390 390&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; id=&quot;smiley&quot;&gt;
    &lt;defs&gt;
      &lt;filter x=&quot;-50%&quot; y=&quot;-50%&quot; width=&quot;200%&quot; height=&quot;200%&quot; filterUnits=&quot;objectBoundingBox&quot; id=&quot;filter-1&quot;&gt;
        &lt;feOffset dx=&quot;-30&quot; dy=&quot;-30&quot; in=&quot;SourceAlpha&quot; result=&quot;shadowOffsetInner1&quot;&gt;&lt;/feOffset&gt;
        &lt;feGaussianBlur stdDeviation=&quot;0&quot; in=&quot;shadowOffsetInner1&quot; result=&quot;shadowBlurInner1&quot;&gt;&lt;/feGaussianBlur&gt;
        &lt;feComposite in=&quot;shadowBlurInner1&quot; in2=&quot;SourceAlpha&quot; operator=&quot;arithmetic&quot; k2=&quot;-1&quot; k3=&quot;1&quot; result=&quot;shadowInnerInner1&quot;&gt;&lt;/feComposite&gt;
        &lt;feColorMatrix values=&quot;0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.21 0&quot; in=&quot;shadowInnerInner1&quot; type=&quot;matrix&quot; result=&quot;shadowMatrixInner1&quot;&gt;&lt;/feColorMatrix&gt;
        &lt;feMerge&gt;
          &lt;feMergeNode in=&quot;SourceGraphic&quot;&gt;&lt;/feMergeNode&gt;
          &lt;feMergeNode in=&quot;shadowMatrixInner1&quot;&gt;&lt;/feMergeNode&gt;
        &lt;/feMerge&gt;
      &lt;/filter&gt;
      &lt;rect id=&quot;path-2&quot; x=&quot;45&quot; y=&quot;45&quot; width=&quot;300&quot; height=&quot;300&quot; rx=&quot;70&quot;&gt;&lt;/rect&gt;
    &lt;/defs&gt;
    &lt;g stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
      &lt;g filter=&quot;url(#filter-1)&quot;&gt;
        &lt;use stroke=&quot;#33639B&quot; stroke-width=&quot;16&quot; fill=&quot;#69A4E9&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot; id=&quot;smiley__body&quot;&gt;&lt;/use&gt;
        &lt;use stroke=&quot;none&quot; fill=&quot;none&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
      &lt;/g&gt;
      &lt;path d=&quot;M164,219 C172.836556,219 180,210.941125 180,201 C180,191.058875 172.836556,183 164,183 C155.163444,183 148,191.058875 148,201 C148,210.941125 155.163444,219 164,219 Z&quot; id=&quot;smiley__left-eye&quot; fill=&quot;#33639B&quot;&gt;&lt;/path&gt;
      &lt;ellipse id=&quot;smiley__right-eye&quot; fill=&quot;#33639B&quot; cx=&quot;227.5&quot; cy=&quot;199.5&quot; rx=&quot;20.5&quot; ry=&quot;25.5&quot;&gt;&lt;/ellipse&gt;
      &lt;polygon id=&quot;smiley__left-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(155.000000, 159.500000) translate(-155.000000, -159.500000) &quot; points=&quot;170.921875 151.863281 178 167 132 167 &quot;&gt;&lt;/polygon&gt;
      &lt;path d=&quot;M206.778449,154.125766 L215.978379,135.080539 L262.460072,173.170994 L206.778449,154.125766 Z&quot; id=&quot;smiley__right-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(234.474884, 154.269042) rotate(-17.000000) translate(-234.474884, -154.269042) &quot;&gt;&lt;/path&gt;
      &lt;path d=&quot;M122.5,268.5 L268.5,268.5&quot; id=&quot;smiley__mouth&quot; stroke=&quot;#33639B&quot; stroke-width=&quot;15&quot; stroke-linecap=&quot;square&quot;&gt;&lt;/path&gt;
    &lt;/g&gt;
  &lt;/svg&gt;
  &lt;svg id=&quot;smiley-angry&quot; width=&quot;390px&quot; height=&quot;390px&quot; viewBox=&quot;0 0 390 390&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;defs&gt;
      &lt;filter x=&quot;-50%&quot; y=&quot;-50%&quot; width=&quot;200%&quot; height=&quot;200%&quot; filterUnits=&quot;objectBoundingBox&quot; id=&quot;filter-1&quot;&gt;
        &lt;feOffset dx=&quot;-30&quot; dy=&quot;-30&quot; in=&quot;SourceAlpha&quot; result=&quot;shadowOffsetInner1&quot;&gt;&lt;/feOffset&gt;
        &lt;feGaussianBlur stdDeviation=&quot;0&quot; in=&quot;shadowOffsetInner1&quot; result=&quot;shadowBlurInner1&quot;&gt;&lt;/feGaussianBlur&gt;
        &lt;feComposite in=&quot;shadowBlurInner1&quot; in2=&quot;SourceAlpha&quot; operator=&quot;arithmetic&quot; k2=&quot;-1&quot; k3=&quot;1&quot; result=&quot;shadowInnerInner1&quot;&gt;&lt;/feComposite&gt;
        &lt;feColorMatrix values=&quot;0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.21 0&quot; in=&quot;shadowInnerInner1&quot; type=&quot;matrix&quot; result=&quot;shadowMatrixInner1&quot;&gt;&lt;/feColorMatrix&gt;
        &lt;feMerge&gt;
          &lt;feMergeNode in=&quot;SourceGraphic&quot;&gt;&lt;/feMergeNode&gt;
          &lt;feMergeNode in=&quot;shadowMatrixInner1&quot;&gt;&lt;/feMergeNode&gt;
        &lt;/feMerge&gt;
      &lt;/filter&gt;
      &lt;rect id=&quot;path-2&quot; x=&quot;45&quot; y=&quot;45&quot; width=&quot;300&quot; height=&quot;300&quot; rx=&quot;70&quot;&gt;&lt;/rect&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
      &lt;g filter=&quot;url(#filter-1)&quot;&gt;
        &lt;use stroke=&quot;#33639B&quot; stroke-width=&quot;16&quot; fill=&quot;#69A4E9&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot; id=&quot;smiley-angry__body&quot;&gt;&lt;/use&gt;
        &lt;use stroke=&quot;none&quot; fill=&quot;none&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
      &lt;/g&gt;
      &lt;path d=&quot;M164,230 C178.359403,230 190,217.911688 190,203 C190,188.088312 178.359403,176 164,176 C149.640597,176 138,188.088312 138,203 C138,217.911688 149.640597,230 164,230 Z&quot; id=&quot;smiley-angry__left-eye&quot; fill=&quot;#33639B&quot;&gt;&lt;/path&gt;
      &lt;ellipse id=&quot;smiley-angry__right-eye&quot; fill=&quot;#33639B&quot; cx=&quot;224&quot; cy=&quot;208.5&quot; rx=&quot;23&quot; ry=&quot;25.5&quot;&gt;&lt;/ellipse&gt;
      &lt;polygon id=&quot;smiley-angry__left-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(154.637117, 149.601532) rotate(23.000000) translate(-154.637117, -149.601532) &quot; points=&quot;177.637117 140.514229 177.637117 158.891193 131.637117 155.601532 &quot;&gt;&lt;/polygon&gt;
      &lt;path d=&quot;M204.076423,160.168344 L211.200827,136.552495 L253.534648,162.326529 L204.076423,160.168344 Z&quot; id=&quot;smiley-angry__right-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(229.049460, 149.424577) rotate(-32.000000) translate(-229.049460, -149.424577) &quot;&gt;&lt;/path&gt;
      &lt;path d=&quot;M179.5,281.5 L211.5,281.5&quot; id=&quot;smiley-angry__mouth&quot; stroke=&quot;#33639B&quot; stroke-width=&quot;15&quot; stroke-linecap=&quot;square&quot;&gt;&lt;/path&gt;
    &lt;/g&gt;
  &lt;/svg&gt;
  &lt;svg id=&quot;smiley-sad&quot; width=&quot;390px&quot; height=&quot;390px&quot; viewBox=&quot;0 0 390 390&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;defs&gt;
      &lt;filter x=&quot;-50%&quot; y=&quot;-50%&quot; width=&quot;200%&quot; height=&quot;200%&quot; filterUnits=&quot;objectBoundingBox&quot; id=&quot;filter-1&quot;&gt;
        &lt;feOffset dx=&quot;-30&quot; dy=&quot;-30&quot; in=&quot;SourceAlpha&quot; result=&quot;shadowOffsetInner1&quot;&gt;&lt;/feOffset&gt;
        &lt;feGaussianBlur stdDeviation=&quot;0&quot; in=&quot;shadowOffsetInner1&quot; result=&quot;shadowBlurInner1&quot;&gt;&lt;/feGaussianBlur&gt;
        &lt;feComposite in=&quot;shadowBlurInner1&quot; in2=&quot;SourceAlpha&quot; operator=&quot;arithmetic&quot; k2=&quot;-1&quot; k3=&quot;1&quot; result=&quot;shadowInnerInner1&quot;&gt;&lt;/feComposite&gt;
        &lt;feColorMatrix values=&quot;0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.21 0&quot; in=&quot;shadowInnerInner1&quot; type=&quot;matrix&quot; result=&quot;shadowMatrixInner1&quot;&gt;&lt;/feColorMatrix&gt;
        &lt;feMerge&gt;
          &lt;feMergeNode in=&quot;SourceGraphic&quot;&gt;&lt;/feMergeNode&gt;
          &lt;feMergeNode in=&quot;shadowMatrixInner1&quot;&gt;&lt;/feMergeNode&gt;
        &lt;/feMerge&gt;
      &lt;/filter&gt;
      &lt;rect id=&quot;path-2&quot; x=&quot;45&quot; y=&quot;45&quot; width=&quot;300&quot; height=&quot;300&quot; rx=&quot;70&quot;&gt;&lt;/rect&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
      &lt;g&gt;
        &lt;g filter=&quot;url(#filter-1)&quot;&gt;
          &lt;use stroke=&quot;#33639B&quot; stroke-width=&quot;16&quot; fill=&quot;#69A4E9&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot; id=&quot;smiley-sad__body&quot;&gt;&lt;/use&gt;
          &lt;use stroke=&quot;none&quot; fill=&quot;none&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
        &lt;/g&gt;
        &lt;polygon id=&quot;smiley-sad__left-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(139.489906, 148.445197) rotate(-22.000000) translate(-139.489906, -148.445197) &quot; points=&quot;155.702015 135.633087 161.177979 161.445197 117.940234 161.445197 &quot;&gt;&lt;/polygon&gt;
        &lt;path d=&quot;M156,236 C170.359403,236 182,223.911688 182,209 C182,194.088312 170.359403,182 156,182 C141.640597,182 130,194.088312 130,209 C130,223.911688 141.640597,236 156,236 Z&quot; id=&quot;smiley-sad__left-eye&quot; fill=&quot;#33639B&quot;&gt;&lt;/path&gt;
        &lt;ellipse id=&quot;smiley-sad__right-eye&quot; fill=&quot;#33639B&quot; cx=&quot;234&quot; cy=&quot;207.5&quot; rx=&quot;32&quot; ry=&quot;31.5&quot;&gt;&lt;/ellipse&gt;
        &lt;path d=&quot;M213.076423,146.168344 L220.200827,122.552495 L262.534648,148.326529 L213.076423,146.168344 Z&quot; id=&quot;smiley-sad__right-eyebrow&quot; fill=&quot;#33639B&quot; transform=&quot;translate(238.049460, 135.424577) rotate(17.000000) translate(-238.049460, -135.424577) &quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M156.3125,283.484375 C183.857004,258.058436 201.207184,257.26089 233.867188,278.996094&quot; id=&quot;smiley-sad__mouth&quot; stroke=&quot;#33639B&quot; stroke-width=&quot;15&quot;&gt;&lt;/path&gt;
      &lt;/g&gt;
    &lt;/g&gt;
  &lt;/svg&gt;
&lt;figcaption&gt;Cliquez pour tester...&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Pour se faciliter la vie, l‚Äôid√©e est de pouvoir animer chacune des parties du smiley ind√©pendamment. La fa√ßon de faire est assez simple; on applique une ID √† la section de notre SVG en question, et on la lie √† Snap.Svg. Par exemple¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;var smiley = Snap.select('#smiley'),
    smileyBody = Snap.select('#smiley__body'),
    smileyMouth = Snap.select('#smiley__mouth');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Libre √† nous de les animer ensuite comme l‚Äôon souhaite. Pour toggle les changements d‚Äô√©tat, on applique un callback au &lt;code class=&quot;highlighter-rouge&quot;&gt;smiley.click&lt;/code&gt; pour utiliser la fonction souhait√©e (ici, &lt;code class=&quot;highlighter-rouge&quot;&gt;smileyDef()&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;smileyToggle&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;toggle1 = false;
smiley.click(function() {
  if(toggle1) {
    smileyDef();
    toggle1 = false;
  }
  else {
    smileyToggle();
    toggle1 = true;
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;animation-du-corps&quot;&gt;Animation du corps&lt;/h2&gt;

&lt;p&gt;Les modifications apport√©es au corps sont assez simples¬†: on change uniquement la couleur du fond et de la bordure. Cela se fait de la mani√®re suivante¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function smileyToggle() {
  smileyBody.animate({fill: '#A4DA69', stroke: '#5B9020'}, 150, mina.ease);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;150&lt;/code&gt; repr√©sente la dur√©e de l‚Äôanimation et &lt;code class=&quot;highlighter-rouge&quot;&gt;mina.ease&lt;/code&gt; le type d‚Äôeasing souhait√©.&lt;/p&gt;

&lt;h2 id=&quot;animation-de-la-bouche&quot;&gt;Animation de la bouche&lt;/h2&gt;

&lt;p&gt;Il va s‚Äôagir de modifier le &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; de la bouche pour faire arborer √† notre smiley un gros sourire. Cela se fait d‚Äôune mani√®re identique √† l‚Äôanimation des couleurs du body¬†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function smileyToggle() {
  smileyMouth.animate({d: 'M90.7207031,217.580078 C129.926268,287.516842 285.592097,293.239314 300.232422,205.320312', stroke: '#5B9020'}, 150, mina.ease);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;animation-des-sourcils&quot;&gt;Animation des sourcils&lt;/h2&gt;

&lt;p&gt;Sketch a un peu compliqu√© les choses sur cette partie, puisque pour certains de mes soucils il a utilis√© des &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; et pour d‚Äôautres des &lt;code class=&quot;highlighter-rouge&quot;&gt;polygon&lt;/code&gt;. J‚Äôai d√©cid√© de garder cette structure afin de me familiariser un peu plus avec les fonctionnalit√©s de base de Snap.svg.&lt;/p&gt;

&lt;p&gt;Pour les &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt;, j‚Äôai comme pour ma bouche simplement modifi√© mon attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;. Pour les &lt;code class=&quot;highlighter-rouge&quot;&gt;polygon&lt;/code&gt;, j‚Äôai d√ª appliquer des transformations pour que le sourcil en question se d√©place √† l‚Äôendroit voulu.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;function smileyToggle() {
  smileyLeftEyebrow.animate({transform: 't0,-30', fill: '#5B9020'}, 150, mina.ease);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Les transformations sur Snap.svg ont une syntaxe assez sp√©ciale. Ainsi, &lt;code class=&quot;highlighter-rouge&quot;&gt;t0,-30&lt;/code&gt; d√©signe une translation des valeurs x et y √† 0 et -30 dans l‚Äôespace. Pour plus d‚Äôinfos sur le sujet, je vous conseille de lire cet &lt;a href=&quot;http://stackoverflow.com/questions/20302801/how-do-i-understand-transform-properties-in-snap-svg&quot;&gt;article¬†&lt;sup&gt;EN&lt;/sup&gt;&lt;/a&gt; sur Stackoverflow.&lt;/p&gt;

&lt;h2 id=&quot;quelques-pr√©cisions-pour-finir&quot;&gt;Quelques pr√©cisions pour finir&lt;/h2&gt;

&lt;p&gt;Puisque mes animations sont bas√©e sur un retour √† l‚Äô√©tat initial, il est n√©cessaire de pr√©voir une fonction qui r√©initialisera les valeurs par d√©faut du SVG. (D‚Äôo√π la fonction &lt;code class=&quot;highlighter-rouge&quot;&gt;smileyDef()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Le d√©tail de mon code est disponible ci-dessous, mais gardez en t√™te que √ßa n‚Äôest qu‚Äôune d√©mo et que je n‚Äôai pas vraiment cherch√© √† l‚Äôoptimiser. J‚Äôimagine qu‚Äôil sera plus facile √† lire ainsi.&lt;/p&gt;

&lt;script src=&quot;/demos/snapsvg.min.js&quot;&gt;&lt;/script&gt;

&lt;p class=&quot;demo&quot;&gt;&lt;a href=&quot;http://codepen.io/eskiiss/full/gxqsr&quot;&gt;Voir la d√©mo&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="svg" /><category term="tutoriels" /><summary type="html">Ces derniers temps, j‚Äôai un peu exp√©riment√© l‚Äôanimation de SVG. Mon premier essai a √©t√© cet oiseau, dont les diff√©rents √©l√©ments sont anim√©s avec des keyframes. Mais √ßa reste limit√© en termes de possibilit√©s¬†: si je veux pouvoir modifier le trac√© m√™me de mon SVG de mani√®re fluide, la meilleure solution que j‚Äôai trouv√©e est Snap.svg. Je vais vous expliquer le processus en d√©tails.</summary></entry><entry><title type="html">Abandonner le support d‚ÄôIE8</title><link href="http://ronanlevesque.fr/articles/abandonner-le-support-d-ie8/" rel="alternate" type="text/html" title="Abandonner le support d'IE8" /><published>2014-06-20T00:00:00+02:00</published><updated>2014-06-20T00:00:00+02:00</updated><id>http://ronanlevesque.fr/articles/abandonner-le-support-d-ie8</id><content type="html" xml:base="http://ronanlevesque.fr/articles/abandonner-le-support-d-ie8/">&lt;p&gt;La d√©cision de Microsoft &lt;a href=&quot;http://windows.microsoft.com/fr-fr/windows/end-support-help&quot;&gt;de ne plus assurer le support d‚ÄôXP&lt;/a&gt; a eu pour cons√©quence de sonner le glas d√©finitif d‚ÄôInternet Explorer 8. En effet, sans mises √† jour, il deviendra de plus en plus expos√© √† d‚Äô√©ventuels virus ou failles, ce qui forcera ses utilisateurs √† migrer vers d‚Äôautres navigateurs. Pour nous, webdesigners et d√©veloppeurs, c‚Äôest un vrai soulagement et surtout un gros pas en avant‚Ä¶&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;en-intro-quelques-statistiques&quot;&gt;En intro¬†: quelques statistiques&lt;/h2&gt;

&lt;p&gt;Concr√®tement, si on d√©cide d‚Äôarr√™ter tout support pour IE8, on se prive en moyenne de &lt;a href=&quot;http://gs.statcounter.com/#desktop-browser_version_partially_combined-FR-monthly-201404-201406-bar&quot;&gt;3% de nos visiteurs&lt;/a&gt; (donn√©es France). Un chiffre que je consid√®re comme raisonnable, surtout si l‚Äôon garde en t√™te que l‚Äôon peut d√©cider de proposer √† nos visiteurs des navigateurs plus fiables pour mieux prot√©ger leur machine.&lt;/p&gt;

&lt;h2 id=&quot;ce-que-√ßa-implique&quot;&gt;Ce que √ßa implique&lt;/h2&gt;

&lt;p&gt;En faisant le choix d‚Äôexclure IE8 de la liste des navigateurs support√©s, de nombreux avantages imm√©diats vont pouvoir s‚Äôoffrir √† nous; en voici les principaux √† mes yeux.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;El√©ments HTML5¬†:&lt;/strong&gt; on peut mettre de c√¥t√© les &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;shiv HTML5&lt;/a&gt; puisque ces √©l√©ments sont support√©s nativement par IE9. Les navigateurs g√®rent √©galement tr√®s bien les √©l√©ments &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt; par eux-m√™me, plus besoin de plugins flash !&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript¬†:&lt;/strong&gt; manipuler le DOM devient plus facile gr√¢ce √† &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementsByClassName&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;addEventListener&lt;/code&gt; entre autres. ECMAScript 5, qui introduit de nouvelles m√©thodes, b√©n√©ficie d‚Äôun meilleur support.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Un meilleur support de CSS3¬†:&lt;/strong&gt; Plus de possibilit√©s en termes de layouts¬†: transformations, utilisation de &lt;code class=&quot;highlighter-rouge&quot;&gt;calc&lt;/code&gt;. D‚Äôautres propri√©t√©s et pseudo-classes utilisables sans risques¬†: &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;last-child&lt;/code&gt;‚Ä¶ Enfin, On peut abandonner l‚Äôutilisation des &lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt; au profit des &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Responsive design¬†:&lt;/strong&gt; finies les prises de t√™te pour &lt;a href=&quot;/articles/les-anciens-navigateurs/&quot;&gt;d√©cider comment g√©rer&lt;/a&gt; les media queries, on peut maintenant faire de l‚Äôint√©gration mobile-first sans aucun risque.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SVG¬†:&lt;/strong&gt; le format vectoriel du SVG en fait un format parfait pour les √©crans HD et Retina. Plus besoin de pr√©voir des fallbacks en PNG !&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;comment-g√©rer-nos-visiteurs-sur-ie8&quot;&gt;Comment g√©rer nos visiteurs sur IE8¬†?&lt;/h2&gt;

&lt;p&gt;Faire le choix d‚Äôutiliser les features cit√©es ci-dessus, c‚Äôest d√©cider d‚Äôabandonner tout support d‚ÄôIE8 par oppos√© √† une simple d√©gradation de l‚Äôexp√©rience. Les avocats de l‚Äôaccessibilit√© pourraient sans doute y trouver √† redire, mais je pars du principe qu‚Äôil faut parfois forcer la main des utilisateurs pour assurer leur s√©curit√©.&lt;/p&gt;

&lt;p&gt;A mes yeux, la m√©thode la plus ‚Äúpropre‚Äù pour ce faire est de d√©tecter IE8 (via JS ou par un commentaire conditionnel) et d‚Äôappliquer un overlay couvrant la totalit√© de l‚Äô√©cran, informant le visiteur des raisons de ce non-support et proposant une liste de navigateurs plus fiables et s√©curis√©s.&lt;/p&gt;

&lt;h2 id=&quot;le-mot-de-la-fin&quot;&gt;Le mot de la fin&lt;/h2&gt;

&lt;p&gt;Pour conclure sur une petite touche ironique, sachez que mon site supporte malgr√© tout IE8¬†:) Mais il y a de fortes chances pour que √ßa ne soit plus le cas si je d√©cide de le refondre un de ces jours‚Ä¶ et je vous conseille d‚Äôen faire autant.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;info&quot;&gt;Mise √† jour (17/10/2015)&amp;nbsp;: depuis j'ai non seulement abandonn√© le support d'IE8, mais aussi celui d'IE9...&lt;/p&gt;</content><author><name></name></author><category term="ux" /><category term="divers" /><summary type="html">La d√©cision de Microsoft de ne plus assurer le support d‚ÄôXP a eu pour cons√©quence de sonner le glas d√©finitif d‚ÄôInternet Explorer 8. En effet, sans mises √† jour, il deviendra de plus en plus expos√© √† d‚Äô√©ventuels virus ou failles, ce qui forcera ses utilisateurs √† migrer vers d‚Äôautres navigateurs. Pour nous, webdesigners et d√©veloppeurs, c‚Äôest un vrai soulagement et surtout un gros pas en avant‚Ä¶</summary></entry><entry><title type="html">Responsive design¬†: adoptez un process intelligent !</title><link href="http://ronanlevesque.fr/articles/responsive-design-adoptez-un-process-intelligent/" rel="alternate" type="text/html" title="Responsive design&amp;nbsp;: adoptez un process intelligent !" /><published>2014-03-13T00:00:00+01:00</published><updated>2014-03-13T00:00:00+01:00</updated><id>http://ronanlevesque.fr/articles/responsive-design-adoptez-un-process-intelligent</id><content type="html" xml:base="http://ronanlevesque.fr/articles/responsive-design-adoptez-un-process-intelligent/">&lt;p&gt;Ce n‚Äôest plus vraiment une nouveaut√©¬†: le responsive design est la tendance &lt;em&gt;hype&lt;/em&gt; du moment. De plus en plus d‚Äôacteurs du web ont r√©alis√© qu‚Äôil devenait incontournable dans un contexte o√π les supports num√©riques se multiplient de mani√®re ph√©nom√©nale. Mais pour que sa mise en place soit effective, il faut pouvoir adapter nos processes √† ses exigences. Malheureusement √ßa n‚Äôest pas toujours le cas.&lt;/p&gt;

&lt;hr /&gt;

&lt;p class=&quot;info&quot;&gt;Les processes d√©crits ci-dessous interviennent entre la d√©finition des besoins client et de la strat√©gie (contenu, architecture etc.) et les phases de test/d√©ploiement (tests cross-browsers, UAT, etc.).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;responsive-the-wrong-way&quot;&gt;Responsive¬†: the wrong way&lt;/h2&gt;

&lt;p&gt;Je vais partir d‚Äôun mod√®le que j‚Äôai h√©las rencontr√© fr√©quemment par le pass√©, dans le cadre d‚Äôune relation agence/client.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;L‚Äô√©quipe cr√©ative propose des maquettes en version &lt;em&gt;desktop&lt;/em&gt; au client.&lt;/li&gt;
  &lt;li&gt;Le client fait ses retours, les maquettes sont valid√©es.&lt;/li&gt;
  &lt;li&gt;Les versions ‚Äúpetit √©cran‚Äù sont maquett√©es.&lt;/li&gt;
  &lt;li&gt;Les maquettes sont transmises pour int√©gration / d√©veloppement.&lt;/li&gt;
  &lt;li&gt;Les probl√®mes commencent.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Qu‚Äôest ce qui cloche avec cette fa√ßon de faire¬†?&lt;/strong&gt; Le probl√®me saute d‚Äôembl√©e aux yeux, l‚Äô√©quipe technique est int√©gr√©e en fin de boucle. Pour comprendre pourquoi cela est un gros souci, il est n√©cessaire de bien saisir la nuance entre responsive design et adaptive design. Rien de mieux qu‚Äôun sch√©ma pour √ßa¬†:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/img/responsive-iceberg.jpg&quot; alt=&quot;Responsive Iceberg&quot; /&gt;
	&lt;figcaption&gt;Responsive Iceberg, &amp;copy; Brad Frost&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Le responsive design n‚Äôest en r√©alit√© qu‚Äôune partie de ce qu‚Äôon appelle l‚Äôadaptive design. Celui-ci ajoute une forte touche de complexit√© qui ne doit pas √™tre prise √† la l√©g√®re¬†: gestion des performances, des m√©dias (notamment images), primaut√© du contenu sur le contenant, chargement conditionnel, am√©lioration progressive etc.&lt;/p&gt;

&lt;p&gt;Les deux notions sont indissociables si l‚Äôon veut pouvoir fournir une bonne exp√©rience aux utilisateurs. L‚Äô√©quipe technique doit donc se trouver au centre des processes, sinon on court droit √† la catastrophe. En partant directement d‚Äôune version &lt;em&gt;desktop&lt;/em&gt;, on occulte les petits √©crans et toutes les contraintes qui y sont li√©es.&lt;/p&gt;

&lt;h2 id=&quot;responsive-the-good-way&quot;&gt;Responsive¬†: the good way&lt;/h2&gt;

&lt;p&gt;En prenant en compte ces informations, le sch√©ma de cr√©ation d‚Äôun site devrait √™tre le suivant, ou au moins s‚Äôen approcher¬†:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cr√©ation de wireframes grossiers faisant intervenir l‚Äô√©quipe cr√©a, l‚Äô√©quipe technique et id√©alement l‚Äô√©quipe UX; le tout dans une d√©marche &lt;em&gt;mobile first&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Cr√©ations de prototypes HTML afin d‚Äôidentifier les interactions intervenant de mani√®re responsive.&lt;/li&gt;
  &lt;li&gt;Mise en place du design visuel, cr√©ation de guides de styles.&lt;/li&gt;
  &lt;li&gt;Cr√©ation des diff√©rents blocs r√©utilisables √† travers toutes les pages.&lt;/li&gt;
  &lt;li&gt;Int√©gration et d√©veloppement.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cette fa√ßon de faire apporte une flexibilit√© vitale √† la r√©alisation d‚Äôun site adaptable au plus large nombre de supports.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Le responsive design doit √™tre r√©fl√©chi en amont pour pouvoir √™tre efficient. Il est imp√©ratif que nos processes s‚Äôadaptent √† cette nouvelle fa√ßon de r√©fl√©chir, &lt;strong&gt;et non l‚Äôinverse&lt;/strong&gt;. Dans le cas contraire, on se retrouvera avec des sites plus lourds que n√©cessaires, difficilement modifiables, fonctionnant gr√¢ce √† des bidouillages bancals.&lt;/p&gt;

&lt;p&gt;Pour une description compl√®te d‚Äôun process responsive, je vous invite √† consulter &lt;a href=&quot;http://responsiveprocess.com/&quot;&gt;responsiveprocess.com&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="rwd" /><summary type="html">Ce n‚Äôest plus vraiment une nouveaut√©¬†: le responsive design est la tendance hype du moment. De plus en plus d‚Äôacteurs du web ont r√©alis√© qu‚Äôil devenait incontournable dans un contexte o√π les supports num√©riques se multiplient de mani√®re ph√©nom√©nale. Mais pour que sa mise en place soit effective, il faut pouvoir adapter nos processes √† ses exigences. Malheureusement √ßa n‚Äôest pas toujours le cas.</summary></entry></feed>